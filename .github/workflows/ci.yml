name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: osint
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d osint"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-git-

      - name: Check formatting (rustfmt)
        run: cargo fmt -- --check

      - name: Lint code (clippy)
        run: cargo clippy --all-targets --features "postgres runtime-tokio-native-tls macros chrono migrate" -- -D warnings

      - name: Dependency audit (cargo-audit)
        run: |
          cargo install cargo-audit --locked
          cargo audit

      - name: Security lint (cargo-deny)
        run: |
          cargo install cargo-deny --locked
          cargo deny check

      - name: SAST (cargo-geiger)
        run: |
          cargo install cargo-geiger --locked
          cargo geiger --all

      - name: SAST (CodeQL)
        uses: github/codeql-action/init@v3
        with:
          languages: rust

      - name: Autobuild (CodeQL)
        uses: github/codeql-action/autobuild@v3

      - name: Run CodeQL analysis
        uses: github/codeql-action/analyze@v3

      - name: Run tests
        run: cargo test -- --nocapture

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgres
        env:
          CARGO_INSTALL_ROOT: ~/.cargo/bin

      - name: Run SQLx migrations
        env:
          DATABASE_URL: postgres://user:pass@localhost:5432/osint
        run: sqlx migrate run

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: false
          tags: rust_feed_ingestor:latest

      - name: Generate SBOM (cargo-sbom)
        run: |
          cargo install cargo-sbom --locked
          cargo sbom --output-format cyclonedx > sbom.xml

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.xml

      - name: Upload release binary
        uses: actions/upload-artifact@v4
        with:
          name: rust_feed_ingestor
          path: target/release/rust_feed_ingestor