# .github/workflows/ci.yml
# GitHub Actions CI pipeline for Rust OSINT Feed Ingestor
# Runs on push and pull_request to main, builds and tests the Rust project,
# checks formatting, clippy, runs SQLx migrations against PostgreSQL, and builds the Docker image.

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: user
          POSTGRES_PASSWORD: pass
          POSTGRES_DB: osint
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U user -d osint"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-registry-

      - name: Cache Cargo index
        uses: actions/cache@v3
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-git-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-git-

      - name: Run rustfmt check
        run: cargo fmt -- --check

      - name: Run clippy
        run: cargo clippy --all-targets -- -D warnings

      - name: Run tests
        run: cargo test -- --nocapture

      - name: Install sqlx-cli
        run: cargo install sqlx-cli --no-default-features --features postgresql
        env:
          CARGO_INSTALL_ROOT: ~/.cargo/bin

      - name: Run SQLx migrations
        env:
          DATABASE_URL: postgres://user:pass@localhost:5432/osint
        run: sqlx migrate run

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: false
          tags: rust_feed_ingestor:latest
